---
import MainLayout from '../layouts/MainLayout.astro';
import DashboardContent from '../components/DashboardContent';

// We'll handle authentication in client-side
// This is just a placeholder for SSR
const isAuthenticated = true;
const userRole = null; // Will be set via client-side script
---

<MainLayout title="Dashboard" isAuthenticated={isAuthenticated} userRole={userRole}>
  <div class="mb-6 flex items-center justify-between">
    <h1 class="text-2xl font-bold text-gray-800 dark:text-white">Dashboard</h1>
  </div>

  <DashboardContent client:load />
</MainLayout>

<script>
  import { authDBOperations } from '../utils/indexedDB';

  // Simple auth check - redirect if not logged in
  (async function() {
    try {
      const authData = await authDBOperations.getAuth();

      if (!authData || !authData.token) {
        window.location.href = '/login';
        return;
      }

      const role = authData.user.role;

      if (role !== 'production_manager' && role !== 'operator') {
        window.location.href = '/login';
        return;
      }

      // Find all Astro islands that need to know about the user role
      const islands = document.querySelectorAll('astro-island[uid]');
      islands.forEach(island => {
        try {
          // Get current props if any
          const currentProps = island.getAttribute('props');
          let propsObj = currentProps ? JSON.parse(currentProps) : {};

          // Update userRole
          propsObj.userRole = role;

          // Set the updated props
          island.setAttribute('props', JSON.stringify(propsObj));
        } catch (e) {
          console.error('Error updating props for island:', e);
        }
      });

      // Also update any component that might be looking for a data attribute
      document.body.setAttribute('data-user-role', role);

    } catch (error) {
      console.error('Error checking authentication:', error);
      window.location.href = '/login';
    }
  })();
</script>
