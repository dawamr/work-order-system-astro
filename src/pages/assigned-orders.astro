---
import MainLayout from '../layouts/MainLayout.astro';
import WorkOrderList from '../components/WorkOrderList';
import type { UserRole } from '../types/userRole';
import type { WorkOrder } from '../types/workOrders';
// We'll handle authentication in client-side
// This is just a placeholder for SSR
const isAuthenticated = true;
const userRole: UserRole | null = null; // Will be set via client-side script
---

<MainLayout title="Assigned Orders" isAuthenticated={isAuthenticated} userRole={userRole}>
  <div class="mb-6 flex flex-col sm:flex-row items-center justify-between gap-4">
    <h1 class="text-2xl font-bold text-gray-800 dark:text-white">Assigned Orders</h1>
  </div>

  <div id="editWorkOrderPanelContainer"></div>
  <WorkOrderList client:load type="operator" />
</MainLayout>

<script>
  import { localStorageOperations } from '../utils/localStorage';
  import { createRoot } from 'react-dom/client';
  import EditWorkOrderSlidePanel from '../components/work-order-views/EditWorkOrderSlidePanel';
  import React from 'react';

   // Setup untuk edit panel
  const setupEditPanel = () => {
    const editPanelContainer = document.getElementById('editWorkOrderPanelContainer');
    if (editPanelContainer) {
      let isEditPanelOpen = false;
      let currentWorkOrder: WorkOrder | null = null;
      const editRoot = createRoot(editPanelContainer);

      const renderEditPanel = () => {
        editRoot.render(
          React.createElement(EditWorkOrderSlidePanel, {
            isOpen: isEditPanelOpen,
            workOrder: currentWorkOrder,
            onClose: () => {
              isEditPanelOpen = false;
              currentWorkOrder = null;
              renderEditPanel();
            },
            onSuccess: () => {
              // Dispatch refresh event
              const refreshEvent = new CustomEvent('refreshWorkOrders');
              document.dispatchEvent(refreshEvent);

              isEditPanelOpen = false;
              currentWorkOrder = null;
              renderEditPanel();
            },
          })
        );
      };

      // Listen untuk event openEditPanel dari TableView
      document.addEventListener('openEditPanel', ((event: CustomEvent<{workOrder: WorkOrder}>) => {
        currentWorkOrder = event.detail.workOrder;
        isEditPanelOpen = true;
        renderEditPanel();
      }) as EventListener);

      // Initial render
      renderEditPanel();
    }
  };

  // Initialize panels
  setupEditPanel();

  // Simple auth check - redirect if not logged in
  (async function() {
    try {
      const authData = localStorageOperations.getAuth();
      if (!authData?.token || authData.user.role !== 'operator') {
        window.location.href = '/login';
      }
      document.body.setAttribute('data-user-role', authData.user.role);
    } catch (error) {
      console.error('Error checking authentication:', error);
      window.location.href = '/login';
    }
  })();
</script>
